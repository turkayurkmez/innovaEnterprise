// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OA.Data.Context;

#nullable disable

namespace OA.Data.Migrations
{
    [DbContext(typeof(InnovaDbContext))]
    partial class InnovaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OA.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Clothes"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Books"
                        });
                });

            modelBuilder.Entity("OA.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Laptop",
                            Price = 1200m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Mouse",
                            Price = 50m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Name = "Keyboard",
                            Price = 100m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Name = "Monitor",
                            Price = 500m,
                            Stock = 40
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Name = "CPU",
                            Price = 1000m,
                            Stock = 50
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Name = "RAM",
                            Price = 100m,
                            Stock = 60
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            Name = "HDD",
                            Price = 500m,
                            Stock = 70
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            Name = "SSD",
                            Price = 1000m,
                            Stock = 80
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            Name = "Laptop",
                            Price = 1200m,
                            Stock = 90
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            Name = "Mouse",
                            Price = 50m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            Name = "Keyboard",
                            Price = 100m,
                            Stock = 110
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            Name = "Monitor",
                            Price = 500m,
                            Stock = 120
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 2,
                            Name = "CPU",
                            Price = 1000m,
                            Stock = 130
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 2,
                            Name = "RAM",
                            Price = 100m,
                            Stock = 140
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 2,
                            Name = "HDD",
                            Price = 500m,
                            Stock = 150
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 2,
                            Name = "SSD",
                            Price = 1000m,
                            Stock = 160
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 3,
                            Name = "Laptop",
                            Price = 1200m,
                            Stock = 170
                        });
                });

            modelBuilder.Entity("OA.Entities.Product", b =>
                {
                    b.HasOne("OA.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OA.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
